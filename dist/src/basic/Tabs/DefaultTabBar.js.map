{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","ViewPropTypes","style","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","object","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","textColor","fontWeight","flex","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nconst ReactNative = require(\"react-native\");\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../../Utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport _ from \"lodash\";\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nimport { ViewPropTypes } from \"../../Utils\";\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style,\n  },\n  contextTypes: {\n    theme: PropTypes.object,\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null,\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle\n  ) {\n    const headerContent = typeof name !== \"string\" ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\n    if (typeof name === \"string\") {\n      return (\n        <Button style={{ flex: 1 }} key={name} onPress={() => onPressHandler(page)}>\n          <TabHeading style={isTabActive ? activeTabStyle : tabStyle} active={isTabActive}>\n            <Text style={isTabActive ? activeTextStyle : textStyle}>{name}</Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button style={{ flex: 1 }} key={_.random(1.2, 5.2)} onPress={() => onPressHandler(page)}>\n          <TabHeading style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0,\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs],\n    });\n    return (\n      <TabContainer style={this.props.tabContainerStyle ? this.props.tabContainerStyle : {}}>\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page]\n          );\n        })}\n        <Animated.View style={[tabUnderlineStyle, { left }, this.props.underlineStyle]} />\n      </TabContainer>\n    );\n  },\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\"NativeBase.DefaultTabBar\", {}, mapPropsToStyleNames)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}