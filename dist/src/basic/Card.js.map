{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","props","dataArray","renderRow","ds","ListView","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","_root","c","children","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","func","StyledCard","mapPropsToStyleNames"],"mappings":"m1BAAA,4B;AACA,qC;AACA;AACA;;AAEA;AACA,mE;;AAEMA,I;AACI;AACR,GAAI,KAAKC,KAAL,CAAWC,SAAX,EAAwB,KAAKD,KAAL,CAAWE,SAAvC,CAAkD;AACjD,GAAMC,IAAK,GAAIC,uBAASC,UAAb,CAAwB;AAClCC,cAAe,uBAACC,EAAD,CAAKC,EAAL,QAAYD,MAAOC,EAAnB,EADmB,CAAxB,CAAX;;AAGA,GAAMC,YAAaN,GAAGO,aAAH,CAAiB,KAAKV,KAAL,CAAWC,SAA5B,CAAnB;AACA;AACC,8BAAC,qBAAD;AACK,KAAKD,KADV;AAEC,wBAFD;AAGC,WAAYS,UAHb;AAIC,UAAW,KAAKT,KAAL,CAAWE,SAJvB,kDADD;;;AAQA;AACD;AACC,8BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKS,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKZ,KAA3C;AACE,KAAKA,KAAL,CAAWa,QADb,CADD;;;AAKA,C,kBArBiBC,gB;;;AAwBnBf,KAAKgB,SAAL;AACIC,oBADJ;AAECC,MAAOC,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,CAAmBF,oBAAUG,MAA7B,CAAqCH,oBAAUI,KAA/C,CAApB,CAFR;AAGCrB,UAAWiB,oBAAUI,KAHtB;AAICpB,UAAWgB,oBAAUK,IAJtB;;;AAOA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC,EAA0D1B,IAA1D,CAAnB,C;;AAEuBA,I,CAAdyB,U","file":"Card.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, ListView } from \"react-native\";\nimport { ViewPropTypes } from '../Utils';\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass Card extends Component {\n\trender() {\n\t\tif (this.props.dataArray && this.props.renderRow) {\n\t\t\tconst ds = new ListView.DataSource({\n\t\t\t\trowHasChanged: (r1, r2) => r1 !== r2,\n\t\t\t});\n\t\t\tconst dataSource = ds.cloneWithRows(this.props.dataArray);\n\t\t\treturn (\n\t\t\t\t<ListView\n\t\t\t\t\t{...this.props}\n\t\t\t\t\tenableEmptySections\n\t\t\t\t\tdataSource={dataSource}\n\t\t\t\t\trenderRow={this.props.renderRow}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View ref={c => (this._root = c)} {...this.props}>\n\t\t\t\t{this.props.children}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nCard.propTypes = {\n\t...ViewPropTypes,\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n\tdataArray: PropTypes.array,\n\trenderRow: PropTypes.func,\n};\n\nconst StyledCard = connectStyle(\"NativeBase.Card\", {}, mapPropsToStyleNames)(Card);\n\nexport { StyledCard as Card };\n"]}